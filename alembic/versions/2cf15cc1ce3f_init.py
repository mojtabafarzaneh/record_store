"""init

Revision ID: 2cf15cc1ce3f
Revises:
Create Date: 2024-06-26 13:56:50.018837

"""
import uuid
from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = '2cf15cc1ce3f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('album',
    sa.Column('id', sa.UUID(as_uuid=True), primary_key=True, default=uuid.uuid4, nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('artist', sa.String(length=100), nullable=False),
    sa.Column('tracks_id', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )

    genre_enum = sa.Enum('ROCK', 'POP', 'ELECTRONIC', 'COUNTRY', 'METAL', name='albumgenre')
    genre_enum.create(op.get_bind(), checkfirst=True)

    # Add the genre column to the album table
    op.add_column('album', sa.Column('genre', genre_enum, nullable=False))


    op.create_table('tracks',
    sa.Column('id', sa.UUID(as_uuid=True), primary_key=True, default=uuid.uuid4, nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('album_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['album_id'], ['album.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.UUID(as_uuid=True), primary_key=True, default=uuid.uuid4, nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('records',
    sa.Column('id', sa.UUID(as_uuid=True), primary_key=True, default=uuid.uuid4, nullable=False),
    sa.Column('album_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['album_id'], ['album.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    record_enum = sa.Enum('VYNIL', 'CD', 'TAPE', name='recordtype')
    record_enum.create(op.get_bind(), checkfirst=True)

    # Add the genre column to the album table
    op.add_column('records', sa.Column('record_type', record_enum, nullable=False))


    op.create_table('card',
    sa.Column('id', sa.UUID(as_uuid=True), primary_key=True, default=uuid.uuid4, nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('record_id', sa.UUID(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['record_id'], ['records.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('card')
    op.drop_table('records')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('tracks')
    op.drop_table('album')
    # ### end Alembic commands ###
